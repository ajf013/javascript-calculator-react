{"version":3,"sources":["components/Result.js","components/Buttons.js","components/Author.js","Calculator.js","index.js"],"names":["Result","props","react_default","a","createElement","className","head","id","result","Buttons","clearStyle","background","operatorStyle","equalsStyle","value","style","onClick","clear","operations","numbers","decimal","Author","role","aria-label","href","github","target","rel","name","isOperator","endsWithOperator","startsWithOperator","startsWithZero","Calculator","state","currVal","prevVal","maxPrevVal","isEvaluated","maxDigitWarning","_this","setState","setTimeout","handleClear","handleNumbers","e","currVal_","prevVal_","includes","length","replace","test","handleOperations","Object","toConsumableArray","slicedOps","slice","concat","handleResult","sliced","math","String","handleDecimal","components_Result","this","components_Buttons","components_Author","React","Component","localStorage","setItem","ReactDOM","render","src_Calculator","document","getElementById"],"mappings":"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","file":"static/js/main.50519321.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Result = props => {\n  return (\n    <div className=\"result-container\">\n      <div className=\"head\">{props.head}</div>\n      <div id=\"display\" className=\"result\">\n        {props.result}\n      </div>\n    </div>\n  );\n};\n\nexport default Result;\n","import React from \"react\";\n\nconst Buttons = props => {\n  const styles = {\n    clearStyle: { background: \"#ac3939\" },\n    operatorStyle: { background: \"#666666\" },\n    equalsStyle: { background: \"#004466\" }\n  };\n  const { clearStyle, operatorStyle, equalsStyle } = styles;\n  return (\n    <div className=\"buttons-container\">\n      <button\n        id=\"clear\"\n        value=\"AC\"\n        className=\"grid-item grid-item-clear\"\n        style={clearStyle}\n        onClick={props.clear}\n      >\n        AC\n      </button>\n      <button\n        id=\"divide\"\n        value=\"/\"\n        style={operatorStyle}\n        onClick={props.operations}\n      >\n        /\n      </button>\n      <button\n        id=\"multiply\"\n        value=\"*\"\n        style={operatorStyle}\n        onClick={props.operations}\n      >\n        x\n      </button>\n      <button id=\"seven\" value=\"7\" onClick={props.numbers}>\n        7\n      </button>\n      <button id=\"eight\" value=\"8\" onClick={props.numbers}>\n        8\n      </button>\n      <button id=\"nine\" value=\"9\" onClick={props.numbers}>\n        9\n      </button>\n      <button\n        id=\"subtract\"\n        value=\"-\"\n        style={operatorStyle}\n        onClick={props.operations}\n      >\n        -\n      </button>\n      <button id=\"four\" value=\"4\" onClick={props.numbers}>\n        4\n      </button>\n      <button id=\"five\" value=\"5\" onClick={props.numbers}>\n        5\n      </button>\n      <button id=\"six\" value=\"6\" onClick={props.numbers}>\n        6\n      </button>\n      <button\n        id=\"add\"\n        value=\"+\"\n        style={operatorStyle}\n        onClick={props.operations}\n      >\n        +\n      </button>\n      <button id=\"one\" value=\"1\" onClick={props.numbers}>\n        1\n      </button>\n      <button id=\"two\" value=\"2\" onClick={props.numbers}>\n        2\n      </button>\n      <button id=\"three\" value=\"3\" onClick={props.numbers}>\n        3\n      </button>\n      <button\n        id=\"zero\"\n        value=\"0\"\n        className=\"grid-item-zero\"\n        onClick={props.numbers}\n      >\n        0\n      </button>\n      <button id=\"decimal\" value=\".\" onClick={props.decimal}>\n        .\n      </button>\n      <button\n        id=\"equals\"\n        value=\"=\"\n        className=\"grid-item-equal\"\n        style={equalsStyle}\n        onClick={props.result}\n      >\n        =\n      </button>\n    </div>\n  );\n};\n\nexport default Buttons;\n","import React from \"react\";\n\nconst Author = props => {\n  return (\n    <div id=\"author\" className=\"author\">\n      <p>\n        Made with{\" \"}\n        <span role=\"img\" aria-label=\"Heart\">\n          ðŸ’—\n        </span>{\" \"}\n        by\n      </p>\n      <a href={props.github} target=\"_blank\" rel=\"noopener noreferrer\">\n        {props.name}\n      </a>\n    </div>\n  );\n};\n\nexport default Author;\n","import React from \"react\";\nimport * as math from \"mathjs\";\n\nimport Result from \"./components/Result\";\nimport Buttons from \"./components/Buttons\";\nimport Author from \"./components/Author\";\nimport \"./App.css\";\n\nconst isOperator = /[*+\\-/]/,\n  endsWithOperator = /[*+\\-/]$/,\n  startsWithOperator = /^[*+\\-/]/,\n  startsWithZero = /^0/;\n\nclass Calculator extends React.Component {\n  state = {\n    currVal: \"0\",\n    prevVal: \"0\",\n    maxPrevVal: \"0\",\n    operations: [],\n    isEvaluated: false\n  };\n\n  maxDigitWarning = () => {\n    this.setState({\n      prevVal: \"MAX DIGIT LIMIT\",\n      maxPrevVal: this.state.prevVal\n    });\n    setTimeout(() => {\n      this.setState({\n        prevVal: this.state.maxPrevVal\n      });\n    }, 1000);\n  };\n\n  handleClear = () => {\n    this.setState({\n      currVal: \"0\",\n      prevVal: \"0\",\n      maxPrevVal: \"0\",\n      operations: [],\n      isEvaluated: false\n    });\n  };\n\n  handleNumbers = e => {\n    let currVal_ = this.state.currVal;\n    let prevVal_ = this.state.prevVal;\n    let value = e.target.value;\n\n    if (!prevVal_.includes(\"DIGIT\")) {\n      if (prevVal_.length > 10) {\n        this.maxDigitWarning();\n      } else if (this.state.isEvaluated) {\n        this.setState({\n          currVal: value,\n          prevVal: value,\n          operations: [],\n          isEvaluated: false\n        });\n      } else {\n        if (this.state.prevVal.includes(\".\")) {\n          this.setState({\n            currVal: currVal_ + value,\n            prevVal: prevVal_ + value\n          });\n        } else {\n          let currVal = currVal_.replace(startsWithZero, \"\");\n          let prevVal = prevVal_.replace(startsWithZero, \"\");\n\n          if (prevVal_ === \"0\" && value === \"0\") return;\n\n          if (isOperator.test(prevVal)) {\n            prevVal = value;\n          } else {\n            prevVal += value;\n          }\n\n          this.setState({\n            currVal: currVal + value,\n            prevVal: prevVal\n          });\n        }\n      }\n    }\n  };\n\n  handleOperations = e => {\n    let currVal = this.state.currVal;\n    let prevVal = this.state.prevVal;\n    let value = e.target.value;\n    let operations = [...this.state.operations];\n\n    if (this.state.isEvaluated) {\n      this.setState({\n        currVal: prevVal + value,\n        prevVal: value,\n        operations: [value],\n        isEvaluated: false\n      });\n    } else {\n      if (isOperator.test(prevVal)) {\n        let currVal_ = currVal.replace(endsWithOperator, value);\n        let slicedOps = operations.slice(0, operations.length - 1);\n        this.setState({\n          currVal: currVal_,\n          prevVal: value,\n          operations: [...slicedOps, value]\n        });\n      } else {\n        if (prevVal.includes(\"DIGIT\")) {\n          return;\n        }\n\n        this.setState({\n          currVal: currVal + value,\n          prevVal: value,\n          operations: [...operations, value]\n        });\n      }\n    }\n  };\n\n  handleResult = () => {\n    let currVal = this.state.currVal;\n\n    if (this.state.isEvaluated) {\n      return;\n    }\n\n    if (startsWithOperator.test(currVal) && endsWithOperator.test(currVal)) {\n      let sliced = currVal.slice(0, currVal.length - 1);\n      if (sliced[0] === \"-\" || sliced[0] === \"+\") {\n        let result = math.eval(sliced);\n        this.setState({\n          currVal: sliced + \"=\" + String(result),\n          prevVal: String(result),\n          isEvaluated: true\n        });\n      } else {\n        return;\n      }\n    } else if (startsWithOperator.test(currVal)) {\n      let sliced = currVal.slice();\n      if (sliced[0] === \"-\" || sliced[0] === \"+\") {\n        let result = math.eval(sliced);\n        this.setState({\n          currVal: sliced + \"=\" + String(result),\n          prevVal: String(result),\n          isEvaluated: true\n        });\n      }\n    } else if (endsWithOperator.test(currVal)) {\n      let sliced = currVal.slice(0, currVal.length - 1);\n      let result = math.eval(sliced);\n      this.setState({\n        currVal: sliced + \"=\" + String(result),\n        prevVal: String(result),\n        isEvaluated: true\n      });\n    } else {\n      let sliced = currVal.slice();\n      let result = math.eval(sliced);\n\n      this.setState({\n        currVal: sliced + \"=\" + String(result),\n        prevVal: String(result),\n        isEvaluated: true\n      });\n    }\n  };\n\n  handleDecimal = e => {\n    if (this.state.isEvaluated) {\n      this.setState({\n        currVal: \"0\" + e.target.value,\n        prevVal: \"0\" + e.target.value,\n        isEvaluated: false\n      });\n    } else {\n      if (this.state.prevVal.includes(\".\")) {\n        return;\n      } else {\n        if (this.state.prevVal.includes(\"DIGIT\")) {\n          return;\n        }\n        this.setState({\n          currVal: this.state.currVal + e.target.value,\n          prevVal: this.state.prevVal + e.target.value\n        });\n      }\n    }\n  };\n\n  render() {\n    return (\n      <div id=\"container\" className=\"container\">\n        <div className=\"calculator-container\">\n          <Result head={this.state.currVal} result={this.state.prevVal} />\n          <Buttons\n            clear={this.handleClear}\n            numbers={this.handleNumbers}\n            operations={this.handleOperations}\n            decimal={this.handleDecimal}\n            result={this.handleResult}\n          />\n        </div>\n        <Author\n          name=\"AJF013\"\n          github=\"https://github.com/ajf013\"\n        />\n      </div>\n    );\n  }\n}\n\nexport default Calculator;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport Calculator from \"./Calculator\";\nimport \"./index.css\";\n\nconst projectName = \"javaScript-calculator\";\nlocalStorage.setItem(\"project-name\", projectName);\n\nReactDOM.render(<Calculator />, document.getElementById(\"root\"));\n"],"sourceRoot":""}